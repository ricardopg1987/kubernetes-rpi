---
# Following https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd
- name: configure modules-load.d
  ansible.builtin.copy:
    dest: "/etc/modules-load.d/containerd.conf"
    content: |
      overlay
      br_netfilter

- name: load modules
  community.general.modprobe:
    name: "{{ item }}"
  loop:
    - overlay
    - br_netfilter

- name: configure sysctl
  ansible.posix.sysctl:
    name: "{{ item[0] }}"
    value: "{{ item[1] }}"
    state: present
    sysctl_file: "/etc/sysctl.d/99-kubernetes-cri.conf"
    reload: yes
  loop:
    - ["net.bridge.bridge-nf-call-iptables", 1]
    - ["net.ipv4.ip_forward", 1]
    - ["net.bridge.bridge-nf-call-ip6tables", 1]

- name: ensure apt https exists
  ansible.builtin.package:
    name: apt-transport-https
    state: present

- name: add in docker apt repo key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: add in docker apt repo
  ansible.builtin.apt_repository:
    repo: deb [arch=arm64] https://download.docker.com/linux/debian buster stable
    state: present

- name: update apt repos
  ansible.builtin.apt:
    update_cache: yes

# https://github.com/raspberrypi/linux/issues/3021#issuecomment-568237926
- name: ignore aufs-tools
  ansible.builtin.copy:
    dest: "/etc/apt/preferences.d/aufs-tools"
    content: |
      Package: aufs-tools
      Pin: version *
      Pin-Priority: -1

- name: install containerd packages
  ansible.builtin.apt:
    name: "{{ item }}={{ package_versions[item] }}"
    state: present
    force: yes
  loop: "{{ containerd_packages }}"

- name: pin containerd packages
  ansible.builtin.copy:
    dest: "/etc/apt/preferences.d/{{ item }}"
    content: |
      Package: {{ item }}
      Pin: version {{ package_versions[item] }}
      Pin-Priority: 1002
  loop: "{{ containerd_packages }}"

- name: create containerd config dir
  ansible.builtin.file:
    path: "/etc/containerd"
    state: directory
    mode: "0755"
    owner: "root"
    group: "root"

- name: get containerd default config
  ansible.builtin.command:
    cmd: "containerd config default"
    creates: "/etc/containerd/config.toml.configured"
  register: containerd_default_config

- name: set containerd default config
  ansible.builtin.copy:
    dest: "/etc/containerd/config.toml"
    content: "{{ containerd_default_config.stdout }}\n"
  when: containerd_default_config.changed
  notify:
    - restart containerd

- name: configure systemd cgroup driver
  ansible.builtin.blockinfile:
    path: "/etc/containerd/config.toml"
    insertafter: '\[plugins\."io\.containerd\.grpc\.v1\.cri"\.containerd\.runtimes\.runc\.options\]$'
    block: "{{ lookup('file', 'cgroup_config.toml') }}"
  when: containerd_default_config.changed
  notify:
    - restart containerd

- name: create configured file
  ansible.builtin.file:
    path: "/etc/containerd/config.toml.configured"
    state: touch
    modification_time: preserve
    access_time: preserve
